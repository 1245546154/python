#!/usr/bin/python（shell < which pyth显示的路径）,下面要写的所有代码的解释工具,解释器就是翻译器
#_*_ coding:utf-8 _*_  （字符编码方式）字符编码越长占用的字符空间越多  可编程的字符编码（python3.6以上自动识别）

python里面不能直接调用其他文件，不能直接编译其他文件。

（SyntaxError:语法错误）
（indentaivonError:缩进错误）
（nameerror:名称未指定错误）
（typeerror:类型错误）
（valueerror:值错误）
（indexerror:索引越界）


字符串变量的操作方法
变量名.          #（加点之后就会显示所有可以执行的操作方法） 

例：
变量.upper   #（使定义的变量变成大写）

变量是用来保存变化的数值的，命名是为了好调用。

keyword           （关键字）
keyword.iskeyword （判断关键字）
keyword.kwlist    （）

条件执行
顺序执行

str1.count    （计算字符个数）
str1[-1]      （取倒数第一个值）
strl[3]       （取正数第三个值）
str1[0:2]     （切片要比索引的字符大一位） 例 abcd 取a和b ←  
str1[0:3:2]   （0到第3位，取布长2的字符，）
str1[0:::3]   （字符串切片）
str1[-1:-4:-1]（字符串切面后面布长的正负号代表了取切片的方向） 

word="this is a test"
str1.split()[0] （输出第一个字符串）



（应聘吹牛法则：看看监控，写写配置文档，配合一下开发或者测试上线个项目什么的。）



----------------------------------------------------------

user = 'a'    #定义函数
id(user)      #输出user函数在内存中存储的位置。

----------------------------------------------------------

print ("hello word")    #输出一句话

----------------------------------------------------------

user="lijiu"            #字母必须用双引号
password="123456"
print (user)
print (password) 或者 print(user,password)

----------------------------------------------------------

price=8.5         计算可以不用双引号
weihgt=7.5
money=price*weihgt
print(money)

----------------------------------------------------------

name = "鹿晗"   str #数据类型  （用双引号或单引号括起来的是字符串）
age = 18        int
height = 1.76   float
marry = True    bool

----------------------------------------------------------

#！数字类型
整型（int）：输入的是整数   例如: age =20
长整型（longint）：超过19位对的整数都是长整型   
（python2里面区别整型和长整型）
（python3里面整合了长整型和整型）

负数
浮点型(float)：输入的是 小数   例如  height= 1.75



#！非数字类型
布尔型（bool）：有两个值 True(真) 是1  ,False（假） 是0
字符串（str）：用双引号或单引号括起来的是字符串
字典dict



#！元组tuple （元组内的元素不能被修改）
定义元组的方法：t4=(1,2)
                t5 = （"a","b","c","d"）
                t5.count('a')  (元素所在元组的个数) 对哪个字符串进行操作必须要加变量名 
                t5.index('a')  (元素所在元组的索引)

t5[2::]      (元组切片)
t5[-1:-3:-1] (元组切片2)
type(t4[0])  (判断元组里面一个元素的类型)
t5[0]+t5[1]+t5[2]+t5[3]  （元组内计算）
t8 = (1,2,'a','b')   （异构） 



#！列表list（L一定要小写）
L3 = [1,2,3]
L3[0]
L4['a','b','c']
L5[1,2,'a','b']
L4.append(1)       #追加1元素到L4里面
L4.pop()           #默认弹出最后一个元素 
L4.remove(w)       #移除指定元素
L4.insert(0,'x')   #插入一个对象到索引之前
L4.clear()         #清除所有元素
L4 = L5.copy()     #拷贝L5到L4
L7 = L5            #内存中内容都是一个位置 
 
L8 = [1,3,6,2,9,5,8,7]
L8.sort()          #自动从左到右排序
L8.reverse()       #自动从右到左的排序   
L8.extend(L7)      #用L7来填充L8，L7就是L8的子集。  


#！字典dict （通过字典工厂的方式自动定义字典）
d1 = {}
type(di)

d2 = {"name":"tom","age":21,"phone":"13800380038"}
d3 = dict(name="jack",age=22,address="beijing")

d4.update(d2)           #更新d2的数据到d4  


d1.setdefault('name')   #表示设置默认key
d1['name'] = "owen"




用type(变量)   测试变量的数据类型
a = 10  
b =10.33 
c = True   
d= “张三丰”  
print(type(d))        #输出变量类型

----------------------------------------------------------

a=10       #变量a
b=20       #变量b
c=a+b      #计算10+20
print (c)  #输出结果30

----------------------------------------------------------

a = True   #True（真）在计算的时候是1  两个数的比较返回值都是布尔型
a += 2     #计算2+1
print(a)   #输出3

a = False  #False(假)  在计算的时候是0  如果是数字型的可以直接进行运算
a += 2     #计算2+0
print(a)   #输出2


(2 * 2)       #2乘以2
(2 ** 1024)   #2的1024次幂

----------------------------------------------------------

name="鹿晗"     #变量字符型
edu="本科学历"  #变量非数字型
info=name+edu   #两个字符串做连接运算
print(info)     #输出结果   str类型

----------------------------------------------------------

name="鹿晗"
edu="本科学历"
age="13"               #13定义成一个字符串
str=" "                #开辟一个空间，用来存储一个字符串
str = "姓名:"+name     #姓名连接name的变量  字符串的连接  用+号
str += "\n年龄:"+age
str += "\n学历:"+edu
print(str)



print("username:%s" %name)   #输出结果同上相等，格式化输出%s的值，来自后面的%name
print("xueli:%s" %edu)
print("nianling:%s" %age)

----------------------------------------------------------

num100 = input("提示：请输出文本信息。")    #由用户自定义变量 python2和3不同
num200 = input("提示：请输出文本信息。")    #由用户自定义变
num300 = num100 + num200                    # +号为拼接字符 
print (num300)                              #输出拼接之后的结果

----------------------------------------------------------

num100 = input("提示：请输出文本信息。")         #由用户自定义变量 python2和3不同
num200 = input("提示：请输出文本信息。")         #由用户自定义变
num3 = int(num1)                                 #转换输入的类型为整数
num4 = int(num2)                                 #转换输入的类型为整数
print ("%s + $s = %s" %(num3,num4,num3 + num4))  #
print ("%s * $s = %s" %(num3,num4,num3 * num4))
print ("%s * $s = %s" %(num3,num4,num3 * num4))
print ("%s %% $s = %s" %(num3,num4,num3 % num4))


----------------------------------------------------------

# -*- coding:UTF-8 -*-
__author__ = "SmartGo"

info = { }
name = input ("please input your name：")
age = int(input("please enter your age："))
info ["name"] = name
info ["age"] = age

！！！！！！！！！！！！！！！！！

#print (info.items())     #items()以元组的方式打印
                            
#for i in info.items():    
    print(i)

#for k,v in info.items():
    print("%s--->%s"%(k,v))

#for k,v in info.items():
    print(k+":",v)

----------------------------------------------------------

# -*- coding:UTF-8 -*-
source = int(input("请输入你的成绩："))
if source >= 90:
    print ("A")
elif source >= 80:
    print ("B")
elif source >= 70:
    print ("C")
    print ("pass")
else :
    print ("D")
    print ("end")

----------------------------------------------------------
import getpass
yb = getpass.getpass("请输入你的密码")

yy = input("请输入用户名")
#yb = input("请输入密码")
yn = yy.lower()
if yn == 'admin' and  yb == '123456':
      print("正确")
else:
      print("错误")

----------------------------------------------------------

